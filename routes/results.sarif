{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n### Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "Ssrf",
                  "Security",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/StirFry-js/stirfry/commit/0ec6c45181546a53d9fc7483d6f6a5fdb637b5f4?diff=split#diff-d4bc096f53c231b6d391431724082c63L5",
                    "lines": [
                      {
                        "line": "var StirFry = require('../../stirfry.js');",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "var server  = new StirFry(8080, '0.0.0.0');",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.request((req, res) => res.send(req.url));",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.request(/.*/, (req, res) => res.send(req.url));",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wellcometrust/wellcomecollection.org/commit/2399266a906b6573c32a18afacb7ef3a04cf61f6?diff=split#diff-d7a22ad952b0d3fd4f7e83234564f74bL28",
                    "lines": [
                      {
                        "line": "  ctx.throw('Error Message', 500);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "r.get('/download', (ctx, next) => {",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const uri = ctx.request.query.uri;",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ctx.body = request(uri);",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (uri.match('https://iiif.wellcomecollection.org')) {",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ctx.body = request(uri);",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ctx.throw('Invalid image host', 422);",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 35,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/video-annotation-project/video-annotation-tool/commit/0d3d49e379bf31d231579ed87147f497f1cf6f0a?diff=split#diff-adf121ad5068140f32baa63e505dfd40L32",
                    "lines": [
                      {
                        "line": "getLevel3 = async () => {",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "  let level3 = await axios.get(`/api/reportInfoLevel3?level1=${this.props.level1}&level2=${this.props.level2}&level3=${this.props.level3}&id=${this.props.id}&level1Id=${this.props.level1Id}&admin=${",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  let level3 = await axios.get(`/api/reportInfoLevel3?level1=${this.props.level1}` +",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                `&level2=${this.props.level2}&level3=${this.props.level3}` +",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                `&id=${this.props.id}&level1Id=${this.props.level1Id}` +",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                `&admin=${localStorage.getItem('admin')}`, {",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token')}",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 392,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "javascript/Ssti",
              "name": "Ssti",
              "shortDescription": {
                "text": "Improper Neutralization of Directives in Statically Saved Code"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nAn attacker exploits this weakness by indirectly controlling the contents of an executable server-side file (such as `.php` or `.aspx`) to trick the server into accessing sensitive data, providing authentication, or even executing shell commands. This weakness is sometimes also known as **Server-Side Template Injection (SSTI)**, since templates are one of the most common types of resources that suffer from this weakness.\nThese types of attacks differ from cross-site scripting (XSS) attacks, which take place on the client side and are generally more easily detected. However, code that is vulnerable to XSS attacks may also be vulnerable to SSTI attacks, since they arise through similar design flaws. And similar to XSS and other injection-type attacks, SSTI attacks are relatively preventable through proactive planning and design during development.\n\n### Best practices for prevention\n* Take a preventative, zero-trust approach and implement safer methods of processing user-controllable input on pages issuing directives to the server.\n* Never pass incoming data directly to the server. Instead, sanitize and validate all incoming data from the client side, ideally checking it against an allowlist of valid actions and destinations (instead of just parsing for banned characters).\n* Select template engines that use sandboxing or allowlists to defend against the possibility of SSTI. However, keep in mind that these may have intrinsic weaknesses.\n* Test applications using lists of publicly available template expression test strings and problematic payloads for your PHP template engine.\n* Given the fallibility of parsing approaches and sandboxing, consider implementing complementary protection methods, such as kernel hardening and read-only filesystems.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "Ssti",
                  "Security",
                  "SourceCookie",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/bipbop/harlan/commit/f7f1a10756926787b42e11dbf47f848da36ff799?diff=split#diff-aad26a354c69662c1c80143889e9604cL5",
                    "lines": [
                      {
                        "line": "const Templates = function () {",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.render = function (path, view, callback) {",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return $.get('templates/' + path + '.tpl', function (data) {",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            callback(Mustache.render(data, view));",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        });",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    };",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    this.render = (path, view, callback) => $.get(`templates/${path}.tpl`, data => {",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "        callback(Mustache.render(data, view));",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "};",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 9,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OmarIthawi/arabic-mathjax/commit/08baac43892b5a401be2524f01999a73d8489577?diff=split#diff-5f34d6fd428013b64e432638e3e0378fL2",
                    "lines": [
                      {
                        "line": "jQuery(function($) {",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    $.get('equations.html', function(template) {",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var rendered = Mustache.render(template, {",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            equations: EQUATIONS",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        });",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var renderEquations = function () {",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "  var $ = jQuery;",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": " ",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  $.get('equations.html', function (template) {",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var rendered = Mustache.render(template, {",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "      equations: EQUATIONS",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/borisding/universsr/commit/c88b733fc8c1b46c31137c06f7d7f234cea059db?diff=split#diff-f53e59f241bb62f0261e245350683e07L39",
                    "lines": [
                      {
                        "line": "// also, should allow it to be mounted as middleware for production usage",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "export default function serverRenderer({ clientStats }) {",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return async (req, res, next) => {",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "      clearChunks();",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "const renderedAppString = await frontloadServerRender(() =>",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "  renderToString(",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    <Provider store={store}>",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "      <StaticRouter location={req.url} context={context}>",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      <StaticRouter location={url} context={context}>",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "        {renderRoutes(routes)}",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "      </StaticRouter>",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 100,
                "cwe": [
                  "CWE-96"
                ]
              }
            },
            {
              "id": "javascript/ZipSlip",
              "name": "ZipSlip",
              "shortDescription": {
                "text": "Arbitrary File Write via Archive Extraction (Zip Slip)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nZip Slip is a form of directory traversal that can be exploited by extracting files from an archive. The premise of the directory traversal vulnerability is that an attacker can gain access to parts of the file system outside of the target folder in which they should reside. The attacker can then overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim’s machine. The vulnerability can also cause damage by overwriting configuration files or other sensitive resources, and can be exploited on both client (user) machines and servers.\n\n## Example\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "ZipSlip",
                  "Security",
                  "SourceArchive",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/TheDiveO/TW5FontAwesome/commit/34061b38a7d5a3b682bb4340c890207910d286ff?diff=split#diff-64acd67a4b548b26b47e325bec8a5f15L52",
                    "lines": [
                      {
                        "line": "self.logger.log(\"updating plugin from local Font Awesome zip package...\");",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.logger.log(\"opening zip package:\", self.params[0]);",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "var fazip = new zip(self.params[0]);",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Autodetect the Font Awesome version...",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "var faroot = fazip.getEntries()[0].entryName.split(\"/\")[0];",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!faroot.startsWith(\"fontawesome-\")) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return \"invalid Font Awesome zip package: missing or invalid path root \" + faroot;",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "var match = /^fontawesome-.*-(\\d+\\.\\d+\\.\\d+)$/.exec(faroot);",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (match === null) {",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return \"cannot autodetect Font Awesome version from path root \" + faroot;",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "], function(font) {",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  self.logger.log(\"extracting\", font.fontfile);",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var woffname = faroot + \"/web-fonts-with-css/webfonts/\" + font.fontfile + \".woff\"",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var woff = fazip.readFile(woffname);",
                        "lineNumber": 93,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (woff === null) {",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  var woffb64 = fazip.readAsText(woffname, \"base64\");",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (woffb64 === null) {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return \"missing WOFF web font file \" + woffname;",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "   }",
                        "lineNumber": 102,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qddjs/qdd/commit/725c8390612f6825619dfd93c8802d5d72e20381?diff=split#diff-afe5f6abf23e157792a2ecc031ede915L14",
                    "lines": [
                      {
                        "line": "debug(() => `untar ${cacheDir} ${destDir}`);",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "const gunzip = zlib.createGunzip();",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const gunzip = new zlib.Gunzip();",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "const extractStream = tarStream.extract();",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "extractStream.on('entry', (header, stream, next) => {",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (header.type !== 'file') {",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    stream.resume();",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    stream.on('end', next);",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return;",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const name = header.name.slice(header.name.indexOf('/'));",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!cacheDir) {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    const filename = destDir + name;",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mkdirp(dirname(filename), (err) => {",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (err) {",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return next(err);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "      }",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "      const writeStream = fs.createWriteStream(filename);",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      const writeStream = new fs.WriteStream(filename);",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "      writeStream.on('close', next);",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "      stream.pipe(writeStream);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dominickp/antfarm/commit/c0cbac2293f8a30441549e85a36f0a1e43bf74da?diff=split#diff-4f221eb51265db08112c2924e225fba2L160",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Open the zip in JSZip",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "JSZip.loadAsync(data).then((zip) => {",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Restore job ticket and create job",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    zip.folder(\"_ticket\").forEach((relativePath, file) => {",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "        zip.file(`_ticket${path.sep}${relativePath}`).async(\"string\")",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "            .then((content) => {",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        .then((content) => {",
                        "lineNumber": 163,
                        "lineChange": "added"
                      },
                      {
                        "line": "let tempPath = tmpobj.name;",
                        "lineNumber": 169,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    if (zip.folder(\"_asset\").length > 1) {",
                        "lineNumber": 171,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        pj.e.log(2, `Restored job did not contain any file assets.`, pj, [job]);",
                        "lineNumber": 172,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    }",
                        "lineNumber": 173,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    zip.folder(\"_asset\").forEach((relativePath, file) => {",
                        "lineNumber": 175,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        // console.log(\"iterating over\", relativePath);",
                        "lineNumber": 176,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Check for valid pack format",
                        "lineNumber": 184,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (zip.folder(\"_asset\").length > 1) {",
                        "lineNumber": 185,
                        "lineChange": "added"
                      },
                      {
                        "line": "    pj.e.log(2, `Restored job did not contain any file assets.`, pj, [job]);",
                        "lineNumber": 186,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 187,
                        "lineChange": "added"
                      },
                      {
                        "line": "                        zip.file(`_asset${path.sep}${relativePath}`).async(\"nodebuffer\")",
                        "lineNumber": 178,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                            .then((content) => {",
                        "lineNumber": 179,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                let filePath = tempPath + path.sep + relativePath;",
                        "lineNumber": 180,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                fs.writeFileSync(filePath, content);",
                        "lineNumber": 181,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                if (job.isFolder()) {",
                        "lineNumber": 182,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    console.log(\"gotta add file to job for folder\");",
                        "lineNumber": 183,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                } else {",
                        "lineNumber": 184,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    job.setPath(filePath);",
                        "lineNumber": 185,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    job.rename(relativePath);",
                        "lineNumber": 186,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                }",
                        "lineNumber": 187,
                        "lineChange": "removed"
                      },
                      {
                        "line": "pj.extractFiles(zip, false, \"_asset/\", (filePath, folderName) => {",
                        "lineNumber": 191,
                        "lineChange": "added"
                      },
                      {
                        "line": "    job.setPath(filePath);",
                        "lineNumber": 192,
                        "lineChange": "added"
                      },
                      {
                        "line": "    job.rename(folderName);",
                        "lineNumber": 193,
                        "lineChange": "added"
                      },
                      {
                        "line": "    callback(job);",
                        "lineNumber": 194,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 195,
                        "lineChange": "added"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 233,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log(\"EXTRACTING SINGLE\");",
                        "lineNumber": 234,
                        "lineChange": "added"
                      },
                      {
                        "line": "    zip.file(newRelPath).async(\"nodebuffer\")",
                        "lineNumber": 235,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .then((content) => {",
                        "lineNumber": 236,
                        "lineChange": "added"
                      },
                      {
                        "line": "            fileNumber++;",
                        "lineNumber": 237,
                        "lineChange": "added"
                      },
                      {
                        "line": "            let filePath = tempPath + path.sep + relativePath;",
                        "lineNumber": 238,
                        "lineChange": "added"
                      },
                      {
                        "line": "            fs.writeFileSync(filePath, content);",
                        "lineNumber": 239,
                        "lineChange": "added"
                      },
                      {
                        "line": "            callback(filePath, relativePath);",
                        "lineNumber": 240,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": "console.log(\"Extracting folder\");",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "zip.folder(zipPath).forEach((relativePath, asset) => {",
                        "lineNumber": 249,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let newRelPath = zipPath + relativePath;",
                        "lineNumber": 250,
                        "lineChange": "added"
                      },
                      {
                        "line": "console.log(\"EXTRACTING SINGLE FROM FOLDER\", totalFiles, fileNumber);",
                        "lineNumber": 264,
                        "lineChange": "added"
                      },
                      {
                        "line": "console.log(newRelPath, relativePath, typeof asset.dir);",
                        "lineNumber": 266,
                        "lineChange": "added"
                      },
                      {
                        "line": "fileNumber++;",
                        "lineNumber": 269,
                        "lineChange": "added"
                      },
                      {
                        "line": "let filePath = tempPath + path.sep + relativePath;",
                        "lineNumber": 270,
                        "lineChange": "added"
                      },
                      {
                        "line": "fs.writeFileSync(filePath, content);",
                        "lineNumber": 271,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (totalFiles === fileNumber) {",
                        "lineNumber": 273,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log(\"relativePath.split(path.sep)\", relativePath.split(path.sep));",
                        "lineNumber": 274,
                        "lineChange": "added"
                      },
                      {
                        "line": "    callback(tempPath, newRelPath.split(path.sep)[1]);",
                        "lineNumber": 275,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 276,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 17,
                "cwe": [
                  "CWE-22"
                ]
              }
            },
            {
              "id": "javascript/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "XSS",
                  "Security",
                  "SourceCookie",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/basicallydan/interfake/commit/a98f64b6996712c5b3717ee13a1faa3c5c15be6f?diff=split#diff-a4c65ede64197e1a112899a68bf994485b889c4b143198bac4af53425b38406fR48",
                    "lines": [
                      {
                        "line": "res.setHeader('Content-Type', 'application/json');",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.send(specifiedResponse.code, specifiedResponse.body);",
                        "lineNumber": 50,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/iverenshaguy/book-a-meal/commit/2cfce3689ed825302f4cf597426f0a55108c939c?diff=split#diff-62c0bdb7e35cfd687116c9fae4d4583cf6cab2b7687749f7399054f7bcdbf5fcL42",
                    "lines": [
                      {
                        "line": "return res.status(201).send(meal);",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return res.status(201).json(meal);",
                        "lineNumber": 41,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/shindesharad71/Anstagram/commit/ac8c703366e073f9fa9ce4b666486a6ba68d23e8?diff=split#diff-63f3a8f1c953bef55c53ac527fa94457a22c8357f265af435605926c66176d97L24",
                    "lines": [
                      {
                        "line": "res.send(req.files);",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.send({ files: req.files, body: req.body });",
                        "lineNumber": 23,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 1116,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n### Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "Sqli",
                  "Security",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/microsoft/0xDeCA10B/commit/e0e0b6dcbf868757f86de1c45aa4a21eab2403cb?diff=split#diff-d849467134997233c75d810c421a5060765c455204773b1e6cd1d8e38799f734L103",
                    "lines": [
                      {
                        "line": "const results = db.exec(`SELECT text FROM data WHERE transaction_hash == '${req.params.transactionHash}'`);",
                        "lineNumber": 102,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (results[0]) {",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  result = null;",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 105,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const originalData = results[0].values[0][0];",
                        "lineNumber": 106,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const getTextStmt = db.prepare('SELECT text FROM data WHERE transaction_hash == $transactionHash LIMIT 1;');",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const textResult = getTextStmt.getAsObject({ $transactionHash: req.params.transactionHash });",
                        "lineNumber": 104,
                        "lineChange": "added"
                      },
                      {
                        "line": "  getTextStmt.free();",
                        "lineNumber": 105,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const originalData = textResult.text;",
                        "lineNumber": 106,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cod3rcursos/curso-react-native/commit/e58db9a8c8e1098ab8a7382735846eaf313ec2b8?diff=split#diff-6745e51d4329a3591aa2dbc34b7493222a11fe7bc3ed5398e25a788117add014L12",
                    "lines": [
                      {
                        "line": ".where({ email: req.body.email })",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".whereRaw(\"LOWER(email) = LOWER(?)\", req.body.email)",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/CGamesPlay/chronicler/commit/3a315db0966cb8d639dfb2ae9181b61d1d7405ea?diff=split#diff-e0173d6c9e1ed543348d72bb9cfd7b32d21cded32778bf0a7e070a58575b36bbL126",
                    "lines": [
                      {
                        "line": "return this.db",
                        "lineNumber": 125,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  .get(",
                        "lineNumber": 126,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SQL`",
                        "lineNumber": 127,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SELECT url, method, requests.headers AS requestHeaders, requests.body AS requestBody,",
                        "lineNumber": 128,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    statusCode, responses.headers as responseHeaders, responses.body AS responseBody",
                        "lineNumber": 129,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FROM requests",
                        "lineNumber": 130,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    LEFT JOIN responses",
                        "lineNumber": 131,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ON responses.requestId = requests.id",
                        "lineNumber": 132,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    WHERE url = ${url}",
                        "lineNumber": 133,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    AND method = ${method}",
                        "lineNumber": 134,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    AND statusCode != 304",
                        "lineNumber": 135,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ORDER BY requests.id DESC",
                        "lineNumber": 136,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    LIMIT 1`,",
                        "lineNumber": 137,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  )",
                        "lineNumber": 138,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  .then(raw => {",
                        "lineNumber": 139,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (!raw || raw.statusCode == null) return null;",
                        "lineNumber": 140,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const result = { ...raw };",
                        "lineNumber": 141,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    result.requestHeaders = JSON.parse(raw.requestHeaders);",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (raw.responseHeaders) {",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      result.responseHeaders = JSON.parse(raw.responseHeaders);",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 145,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return result;",
                        "lineNumber": 146,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return Request.query(this.db)",
                        "lineNumber": 146,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .findOne({ url, method })",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .orderBy(\"id\", \"desc\")",
                        "lineNumber": 148,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .joinEager(\"response\")",
                        "lineNumber": 149,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .modifyEager(\"response\", b => {",
                        "lineNumber": 150,
                        "lineChange": "added"
                      },
                      {
                        "line": "    b.whereNot({ statusCode: 304 });",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 152,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .then(request => {",
                        "lineNumber": 153,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (!request) return null;",
                        "lineNumber": 154,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return {",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "      url: request.url,",
                        "lineNumber": 156,
                        "lineChange": "added"
                      },
                      {
                        "line": "      method: request.method,",
                        "lineNumber": 157,
                        "lineChange": "added"
                      },
                      {
                        "line": "      requestHeaders: request.headers,",
                        "lineNumber": 158,
                        "lineChange": "added"
                      },
                      {
                        "line": "      requestBody: request.body,",
                        "lineNumber": 159,
                        "lineChange": "added"
                      },
                      {
                        "line": "      statusCode: request.response.statusCode,",
                        "lineNumber": 160,
                        "lineChange": "added"
                      },
                      {
                        "line": "      responseHeaders: request.response.headers,",
                        "lineNumber": 161,
                        "lineChange": "added"
                      },
                      {
                        "line": "      responseBody: request.response.body,",
                        "lineNumber": 162,
                        "lineChange": "added"
                      },
                      {
                        "line": "    };",
                        "lineNumber": 163,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 213,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceResourceAccess",
                  "SourceFile",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/how-to-firebase/fogo/commit/a3d5054fa9e7da0201e2709d847102a00a525067?diff=split#diff-ef1bae33e98527602bd4e6bfe2fe6c04747d71e6655a5c718f7100b844c9bb6eL158",
                    "lines": [
                      {
                        "line": "  return `/tmp/${path.parse(filename).base}`;",
                        "lineNumber": 157,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return `/tmp/${Date.now()}`;",
                        "lineNumber": 157,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "function convertLocalFile(localFilename, versionName) {",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const cmd = getCmd(localFilename, versionName);",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return execPromise(cmd);",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getCmd(localFilename, versionName) {",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return `convert ${localFilename} -resize ${versionName}\\\\> ${localFilename}`;",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "function execPromise(cmd) {",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new Promise((resolve, reject) =>",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "    exec(cmd, (error, stdout) => (error ? reject(error) : resolve(stdout)))",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "  );",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getDestination(filename, versionName) {",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const filenameParts = filename.split('/');",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "  filenameParts[filenameParts.length - 2] = versionName;",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return filenameParts.join('/');",
                        "lineNumber": 178,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 179,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getFile(admin, filename) {",
                        "lineNumber": 181,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return admin",
                        "lineNumber": 182,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .storage()",
                        "lineNumber": 183,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .bucket()",
                        "lineNumber": 184,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .file(filename);",
                        "lineNumber": 185,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "function unlinkPromise(localFilename) {",
                        "lineNumber": 188,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new Promise(",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "    (resolve, reject) => fs.unlink(localFilename, err => err && reject(err)) || resolve()",
                        "lineNumber": 190,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/zhoukekestar/modules/commit/b6c2fc78dc8679080b982124a24771f1466b2fb2?diff=split#diff-7347edae6e14bc50ee18f048e29145ce21cf3bb679d0391605c283ec246942bcL20",
                    "lines": [
                      {
                        "line": "res.sendFile(dir + '/' + req.params.id);",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Test ok on winodws. Not sure that linux will be work ok.",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.sendFile((dir + '/' + req.params.id).replace(/\\//g, '\\\\\\\\'));",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/NodeBB/NodeBB/commit/cacc732015c64bba55a6ab45510086febccfb1b2?diff=split#diff-300f765b568b38163933bfcd40c75fe91709a35e9a7522bca2f8c5fe4b19195aL102",
                    "lines": [
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, req.files.userPhoto.name, req.files.userPhoto.path, res);",
                        "lineNumber": 101,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn;",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tvar absolutePath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), path.basename(oldpicture));",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfs.unlink(absolutePath, function(err) {",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tif(err) {\t\t\t\t",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tconsole.error('[%d] %s', Date.now(), + err);",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t}",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t});",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "function uploadUserPicture(uid, extension, tempPath, res) {",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif(!extension) {",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tres.send({",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\terror: 'Error uploading file! Error : Invalid extension!'",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn;",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar filename = uid + '-profileimg' + extension;",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar uploadPath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), filename);",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t// @todo move to proper logging code - this should only be temporary",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tconsole.log('Info: Attempting upload to: '+ uploadPath);",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar is = fs.createReadStream(tempPath);",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar os = fs.createWriteStream(uploadPath);",
                        "lineNumber": 133,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 760,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n### Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoRateLimitingForExpensiveWebOperation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/comatory/fb2iCal/commit/6a1ef614ade7ba821009dbce4a615d448751a449?diff=split#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R5",
                    "lines": [
                      {
                        "line": "const rateLimit = require('express-rate-limit')",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "const crawl = require('./crawler')",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "const parseHTML = require('./parser')",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const generateICS = require('./ics')",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "const { genericErrorHandler, checkFBURL } = require('./middlewares')",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const port = process.env.PORT",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express()",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'ejs')",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.join(__dirname, 'views'))",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.static(path.join(__dirname, 'public')))",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')))",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser())",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/', (req, res) => {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('index')",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/error', (req, res) => {",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const error = req.error || req.query.error || ''",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .status(500)",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .render('error', { error })",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "// NOTE: Capture all unkown URLs",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('*', (req, res) => {",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.status(400).render('404')",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/download', checkFBURL)",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/download', rateLimit())",
                        "lineNumber": 39,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 1164,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "javascript/JwtDecodeMethod",
              "name": "JwtDecodeMethod",
              "shortDescription": {
                "text": "Insecure JWT Verification Method"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSome JSON Web Token (JWT) parse/decode methods do not enforce validation or integrity checks of the JWT. If an application relies on these methods to authenticate users, an attacker could create arbitrary JWTs that may be accepted by the application.\n\n### Best practices for prevention\n\n- Always enforce JWT signature verification by using safe verification methods to ensure the structure and integrity of the JWT is validated before processing.\n\n### References\n\n* [JWT Validation](https://auth0.com/docs/secure/tokens/json-web-tokens/validate-json-web-tokens)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "JwtDecodeMethod",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-347"
                ]
              }
            },
            {
              "id": "javascript/NoSqli",
              "name": "NoSqli",
              "shortDescription": {
                "text": "NoSQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an NoSQL injection attack, the user can submit an NoSQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoSqli",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/JasonEtco/flintcms/commit/4ae34238ce39fde00dfa15082397541758c07af1?diff=split#diff-9de779015fec61fc28e3fc1b3a62d1fdL8",
                    "lines": [
                      {
                        "line": "const sendEmail = require('../../utils/emails/sendEmail')",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "const User = mongoose.model('User')",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const UserGroup = mongoose.model('UserGroup')",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "const router = express.Router()",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "router.get('/verify', async (req, res) => {",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const token = req.query.t",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const token = req.query.t.toString()",
                        "lineNumber": 104,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const user = await User.findOne({ token })",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!user) {",
                        "lineNumber": 107,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bkimminich/juice-shop/commit/5b9e4fe01a989e38be3bc7f52718c0c9d2dc2d6f?diff=split#diff-3ee9e2e81d2a5119de6e749e4d7d088aL7",
                    "lines": [
                      {
                        "line": "module.exports = function trackOrder () {",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return (req, res) => {",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (utils.notSolved(challenges.reflectedXssChallenge) && utils.contains(req.params.id, '<script>alert(\"XSS\")</script>')) {",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "      utils.solve(challenges.reflectedXssChallenge)",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    db.orders.find({ orderId: req.params.id }).then(order => {",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    req.params.id = decodeURIComponent(req.params.id)",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "    db.orders.find({ $where: \"this.orderId === '\" + req.params.id + \"'\" }).then(order => {",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "      const result = utils.queryResultToJson(order)",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (utils.notSolved(challenges.noSqlInjectionChallenge2) && result.data.length > 1) {",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (result.data[0] === undefined) {",
                        "lineNumber": 16,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/reviewninja/review.ninja/commit/17361111027001a330f930557cd3ff6ab04741d4?diff=split#diff-1e55193185e421a5669bbadca9231cc4L8",
                    "lines": [
                      {
                        "line": "var webhook = require('../services/webhook');",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "// models",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "var User = require('mongoose').model('User');",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "var contains = function(events) {",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "},",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "create: function(req, done) {",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "    User.findOne({uuid: req.args.user_uuid}, function(err, user) {",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    User.findOne({uuid: req.user.uuid}, function(err, user) {",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if(err || !user) {",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "fun: 'createHook',",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "arg: {",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    user: req.args.user,",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    repo: req.args.repo,",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "    name: 'web',",
                        "lineNumber": 89,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 69,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/HTTPSourceWithUncheckedType",
              "name": "HTTPSourceWithUncheckedType",
              "shortDescription": {
                "text": "Improper Type Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen an object is coming from `req.body` or `req.query`, coming from the express framework. The value of this property can be controlled by the user. This could be abused by an attacker to craft the properties of the object to crash the application or bypass its logic. As such, consider checking the type of the object.\n\nIf this weakness is present, illegitimate input provided from the user's end could lead to unpredictable results such as the program crashing, unauthorized access to secure resources or command execution at the server side. In addition, if the server is overwhelmed by these types of malfunctions, it may lead to denial of service to legitimate users and tasks.\n\nExample:\n\n```\nmodule.exports = function(req, res) {\n    var data = req.query;\n      // type of value isnt checked before being used\n      data.ids = data.ids.split(',');\n      doStuff(data.ids);\n\n  };\n```\n\n\n\n### Best practices for prevention\n* Adopt a zero-trust model in which all input is considered potentially suspect.\n* Check the type of the object.\n\nExample:\n\n```\nmodule.exports = function(req, res) {\n    var data = req.query;\n    if (data.ids && typeof data.ids == 'string') {\n\n      // type of value is checked\n      data.ids = data.ids.split(',');\n      doStuff(data.ids);\n    } else {}\n  };\n```\n\n###  References\n\n* [CWE-1287: Improper Validation of Specified Type of Input](https://cwe.mitre.org/data/definitions/1287.html)\n* [JavaScript type confusion: Bypassed input validation (and how to remediate)](https://snyk.io/blog/remediate-javascript-type-confusion-bypassed-input-validation/)\n* [req.query Documentation](https://expressjs.com/en/4x/api.html#req.query)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HTTPSourceWithUncheckedType",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jeresig/pharos-images/commit/10d5a93ac502608b07604724e868137d70baa937?diff=split#diff-2b1abe3e454f898854a026d1836d1577L27",
                    "lines": [
                      {
                        "line": "filter: {",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    value: (req) => req.query.filter,",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    value: (fields) => fields.filter,",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    title: (req, query) => req.format(",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        req.gettext(\"Query: '%(query)s'\"), {query: query.filter}),",
                        "lineNumber": 28,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ToManage/TM-CRM_ERP/commit/d8869b82d90ec068552d3b01e20f3f7e36e8ec76?diff=split#diff-b7095dc6f2419facadbce3209c03e25eL2075",
                    "lines": [
                      {
                        "line": "if (self.req.query.filter) {",
                        "lineNumber": 2072,
                        "lineChange": "none"
                      },
                      {
                        "line": "    query.$or = [{",
                        "lineNumber": 2073,
                        "lineChange": "none"
                      },
                      {
                        "line": "        name: new RegExp(req.query.filter, \"gi\")",
                        "lineNumber": 2074,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        name: new RegExp(self.query.filter, \"gi\")",
                        "lineNumber": 2058,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }, {",
                        "lineNumber": 2075,
                        "lineChange": "none"
                      },
                      {
                        "line": "        code_client: new RegExp(req.query.filter, \"gi\")",
                        "lineNumber": 2076,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        code_client: new RegExp(self.query.filter, \"gi\")",
                        "lineNumber": 2060,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mike-engel/bkmrkd/commit/4fa34ad184a4b2908a4cadca304f98058111c60b?diff=split#diff-4bd320e8162d3b895b8fc9933c232714L9",
                    "lines": [
                      {
                        "line": "// /search?term=funny%20dogs",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "searchRouter.route('/')",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .get((req, res) => {",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    const searchTerm = req.query.term.toLowerCase()",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const searchTerm = (req.query.term || '').toLowerCase()",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log(searchTerm)",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    searchBookmarks(searchTerm, (err, results) => {",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 477,
                "cwe": [
                  "CWE-1287"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/Ssrf",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into request.get, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[request.get](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 20,
                  "startColumn": 30,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d1014012efa898ee57b63baa0f17d031815faa2ffae289bf7c30c391c953fddf",
            "1": "dca15045.70dd3b3b.568208f0.d7919eeb.79a7d027.98c7c24d.df7e59ba.377cd288.6849fe68.70dd3b3b.568208f0.08906714.79a7d027.98c7c24d.83265159.a41fb358",
            "identity": "20182272-0fec-419a-93aa-624e14d5ea3f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 20,
                            "startColumn": 30,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/Ssti",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into pug.compile, where it is used to construct a template that gets rendered. This may result in a Server-Side Template Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to construct a template that gets rendered. This may result in a Server-Side Template Injection vulnerability.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31)",
              "[pug.compile](32)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "userProfile.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 22,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f4b8067edf1c0fa386cc4f6d486caf187c98f5143f657801fc5a1d7af311a9c3",
            "1": "3baa938b.4773f344.8b18f948.d7919eeb.8da73395.8020cfdf.cd61fc56.571b58cd.dca15045.6b0b4bb5.ec66eec9.72a8f743.fd661388.98863ef5.0334236c.26150c29",
            "identity": "b7db5d5a-ddc7-46a7-883f-24a35e0c6280"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 30,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 57,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 71,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 66,
                            "endColumn": 70
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/ZipSlip",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Unsanitized input from Unzipper library flows into fs.createWriteStream, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[Unzipper library](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.createWriteStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fileUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "startColumn": 30,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "53edfe4b4a6f8c51202737c78f9f9d1f9c4ea41de65cb8c52bc811ad0a096d05",
            "1": "bfc007a1.70dd3b3b.568208f0.7da15f0a.ef9f7d82.d9a6604d.6f89b54d.23a616eb.08593d42.349fbb8f.271a59f1.500afa7a.055de38a.d9a6604d.83265159.ef6bffc1",
            "identity": "c20e4703-02a1-4ecc-9fc7-080758ac39f9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 38,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 34,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 51,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 30,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[send](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "userProfile.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a3559e6e01a3d4b66c8d947ac9e2a30e87b194747910a205932cdeddb6d966e",
            "1": "839b1d0f.4773f344.a32ed1a1.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.2f05c567.dca15045.6b0b4bb5.7fde84c3.72a8f743.fd661388.554abc3e.2cbfbe92.9965dac8",
            "identity": "c2e64fe2-73d9-40a8-b8d3-be65b13f8648"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 30,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 57,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 71,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 73,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 20,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 903,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[send](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recycles.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 16,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bcfe2c7783bc7282a9efe3dbe48fc38b5560a9836c7a7b243a160daefdf55aca",
            "1": "716f11c4.4773f344.cae2544c.289fcdd5.d3562abd.8020cfdf.83265159.2f05c567.9dc2a0d3.4773f344.cae2544c.289fcdd5.79a7d027.f8890b3c.0334236c.e6930396",
            "identity": "482a2b13-4a53-4c7d-8428-d7be6122a1ab"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 7,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 5,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 18,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 45,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 27,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 21,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 903,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3)",
              "[query](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "loginv2.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ceb312a217ce76896283a36683df3cb2f96a33a30c10e47882f48e2bde469045",
            "1": "cf7733e4.4773f344.607187b5.f1c2bfe1.ef9f7d82.34a4d81a.0b4f0b50.25f903e1.f759b1f9.277c621c.68d1d5e2.08906714.65a3cf23.41a0a25e.f144dc57.4acb4564",
            "identity": "eb747386-97f6-400d-b103-fbf4a3d7320b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "loginv2.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "loginv2.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "loginv2.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 68,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "loginv2.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 28,
                            "endColumn": 172
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "loginv2.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3)",
              "[query](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "login.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1d1d7d20e43d8a8165c2527c2a8dff11726f2279b423a2c055d142dd8323d25d",
            "1": "cf7733e4.4773f344.607187b5.f1c2bfe1.ef9f7d82.34a4d81a.0b4f0b50.25f903e1.f759b1f9.277c621c.68d1d5e2.08906714.65a3cf23.41a0a25e.f144dc57.4acb4564",
            "identity": "b45b9cb4-24ca-45d4-beb8-d3d2d6e8bbd1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 68,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 28,
                            "endColumn": 172
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.readFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4)",
              "[fs.readFile](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "languages.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 11,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d8371621ab00a2bd0516b2af029764940e09a1490baa08446c1c8c9168b3772b",
            "1": "c3f8dfad.4773f344.607187b5.1c0eb7ca.ef9f7d82.8020cfdf.83265159.3aa86656.c3f8dfad.4773f344.8b18f948.dc733355.acf24367.37110c89.83265159.46608d7c",
            "identity": "1b6e3386-b049-4c31-a84c-fddbb8945fd0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 63,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 63,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 63,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 23,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into fs.open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.open](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "profileImageFileUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 9,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05e72274dd64c39b8ecb3d10204805bd29edd470a34700cafeae264eebb2ba53",
            "1": "cf7733e4.4773f344.607187b5.1c0eb7ca.ef9f7d82.8020cfdf.e1eea83d.8dd92b16.46b7c801.6b0b4bb5.81f55990.72a8f743.91fa4b71.fc587af7.e1eea83d.9965dac8",
            "identity": "e5e35b83-b7cb-498d-a668-03c95b0641b9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 72,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 72,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 17,
                            "endColumn": 118
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 804,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into fs.createWriteStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.createWriteStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "startColumn": 33,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "970e85485f0bacf4124c3d73493cf6e3688af7c488248463b665f88bdc7176d7",
            "1": "cf7733e4.4773f344.607187b5.876f04ab.ef9f7d82.8020cfdf.e1eea83d.25f903e1.565d65b4.6b0b4bb5.81f55990.72a8f743.5ef953d3.34a4d81a.e1eea83d.9965dac8",
            "identity": "54f0fc2f-3f10-4c9b-b200-1e7ed4f6a9d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 34,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 34,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 54,
                            "endColumn": 138
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 33,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 804,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "userProfile.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 62,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "754a238f2186f3131dae105735895851bc8fc0128248739eef10f94ed770df26",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.c3f8dfad.4773f344.8b18f948.c559ebce.aea31650.8020cfdf.83265159.692f7b85",
            "identity": "3ac7c874-49f1-40ba-9736-ff79e979b404"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 660,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "languages.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 72,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "34b963f3ee8b0eae113a4085e87e424b3303ab28891b419a65c9de508fbcb40f",
            "1": "099c30d7.9c6e2949.8b18f948.c559ebce.fd1fa73f.5eabb05b.83265159.be9bb487.c3f8dfad.4773f344.eff3b32f.c559ebce.aea31650.becd9ff1.83265159.4b6faca4",
            "identity": "c410f45f-c5b9-4a3c-8cfb-4a0323fe2f18"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 72,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 660,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "profileImageFileUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 42,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6805c2ad28258cae42db0491bc765804b6b13314ae0796a55e310b653355a62d",
            "1": "e0fda459.9c6e2949.8b18f948.c559ebce.fd1fa73f.5eabb05b.83265159.be9bb487.cf7733e4.4773f344.eff3b32f.c559ebce.91fa4b71.becd9ff1.e1eea83d.9b5cefb9",
            "identity": "0d43f1d0-52b6-41ec-9b30-cd2d30288917"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 42,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 660,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "easterEgg.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 14,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cc980371a4826d98bef0353fada968c5b377729611b5117d91e68f8eaf4ca943",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.4773f344.d9fd6cba.c559ebce.fd1fa73f.13dca07d.f6c5587e.242e913b",
            "identity": "c0cb0344-cb87-4870-811f-1246d618daa7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "easterEgg.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 14,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "easterEgg.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 610,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "videoHandler.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 67,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5a76a5420ecaed0f6faa85113552dda3e92bf2b12f92af63f07e4d9674ff450a",
            "1": "2fa3a5cc.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.c3f8dfad.4773f344.a32ed1a1.c559ebce.aea31650.8020cfdf.83265159.2f05c567",
            "identity": "eb377fad-71ae-46d3-8b17-6fee25acb682"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "videoHandler.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 67,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "videoHandler.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 610,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "privacyPolicyProof.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 14,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b2c1ff63c683c854e85df8b5891efd71fab0c13984830a3bffa520877fbadaf1",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.4773f344.d9fd6cba.c559ebce.fd1fa73f.45ba166c.acd4f248.925e8d7b",
            "identity": "2fe0b84f-9c00-46c8-9f17-02319721a979"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "privacyPolicyProof.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 14,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "privacyPolicyProof.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 610,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "premiumReward.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 14,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "66250a7994821a12664a5ecb7ae3ccad26426dd025d9e6ecadda28c689457286",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.4773f344.d9fd6cba.c559ebce.fd1fa73f.45ba166c.83265159.242e913b",
            "identity": "4c69d43a-66a9-43f4-9ded-7937d4b2e0d0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "premiumReward.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 14,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "premiumReward.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 610,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/JwtDecodeMethod",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "A JWT decode() method is used that decodes the token but does not check its validity or integrity. If the JWT has originated from an untrusted source, decoded data could be crafted by an attacker and should not be considered safe to use or process within the application. Always use JWT verification methods to validate the structure and integrity of a token.",
            "markdown": "A JWT decode() method is used that decodes the token but does not check its validity or integrity. If the JWT has originated from an untrusted source, decoded data could be crafted by an attacker and should not be considered safe to use or process within the application. Always use JWT verification methods to validate the structure and integrity of a token.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verify.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 41,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a4432b15c01f3259e62d3d62c6ffdd5a2008da9b1bbb0c7ead1b72f887051e38",
            "1": "46b7c801.4773f344.0f22609d.72a8f743.ef9f7d82.8020cfdf.ea4b1c47.ae94f388.46b7c801.4773f344.0f22609d.72a8f743.ef9f7d82.8020cfdf.ea4b1c47.ae94f388",
            "identity": "08e9be96-f2bd-40a1-af29-4814d93f637c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "verify.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 41,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4)",
              "[update](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "updateProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 16,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "83d8352b7f3e7cdaf614582bb2d6e3c0bd874be1c7b899560d6687d3ee2e3e59",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.4773f344.2d2c7aff.08906714.79a7d027.34a4d81a.0334236c.2151aa9e",
            "identity": "4afe527c-adba-4453-8e1a-fd333b111f06"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 7,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 758,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[update](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 20,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a407e034036582fed5888a1a5e5040a3b3cfbbbdb6f372cfa48d2888c79afcf8",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.4773f344.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e",
            "identity": "6e7347df-4a7f-418c-9738-931003e31694"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 18,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[update](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 28,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9ffbbe50282282f395f42395a5390b49fa30f8ce8deb9784df92fb30a6edb2e",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.4773f344.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e",
            "identity": "8aed361d-b37b-4f90-a1fe-3df12d44f5b3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 18,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 41,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[findOne](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 16,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "70e92fa26b256f2a526391a7996799b15ec9b52e30f5206378f5b749e2c8d04f",
            "1": "93652555.4773f344.07efaa4d.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.4773f344.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e",
            "identity": "129779ee-4e13-487c-86d9-352a61bf31e2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[findOne](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "startColumn": 26,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e732e80624dac9ad6e24252f8af25395f0a4de4210c29ed5ff409cd6d36a3ae",
            "1": "93652555.4773f344.07efaa4d.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.4773f344.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e",
            "identity": "8f979270-3053-414e-8e39-9d951b1b1260"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 18,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 41,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 808,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[find](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "trackOrder.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "47187e498119b6de28418a89fdab23a50eff7374dcaf5c4b89f46005bdabbd26",
            "1": "cf7733e4.4773f344.e255bd8f.b5fb64b2.ef9f7d82.34a4d81a.0b4f0b50.9b5cefb9.5a562d4f.4773f344.e255bd8f.c559ebce.79a7d027.32f843a3.0334236c.26150c29",
            "identity": "9769f649-e64d-4cc0-981b-73ec691d3db5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 100,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 100,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 96,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 83,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 51,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 20,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "trackOrder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 758,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its match property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[match](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "startColumn": 15,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0768df1740d2591348608a358181ccfb9d3d04af1339ddd7f6ac778d85d09688",
            "1": "6849fe68.4773f344.d2ee7ce0.d7919eeb.b6be8b13.8020cfdf.ec6ba6ab.fcee3017.6849fe68.4773f344.8b18f948.08906714.b6be8b13.8020cfdf.83265159.a41fb358",
            "identity": "9b903efb-f780-4bc5-a387-dbce9b68e7a6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its split property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[split](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 77,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e2519584ebf6d7a6dff3724e6511145238858a5a157ea506dc58c7bbe943deb7",
            "1": "dca15045.bf4464f1.c13ab5fc.73f98346.b6be8b13.8020cfdf.2a970955.e6a09cc0.dca15045.bf4464f1.568208f0.08906714.79a7d027.98c7c24d.83265159.a41fb358",
            "identity": "759f8a1d-b963-4dbb-9605-c12bdb4fcd99"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 73,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 77,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its split property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[split](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 122,
                  "endColumn": 127
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e2519584ebf6d7a6dff3724e6511145238858a5a157ea506dc58c7bbe943deb7",
            "1": "dca15045.bf4464f1.c13ab5fc.73f98346.b6be8b13.8020cfdf.2a970955.e6a09cc0.dca15045.bf4464f1.568208f0.08906714.79a7d027.98c7c24d.83265159.a41fb358",
            "identity": "e5d10f76-8d35-4755-af59-8fbd97906274"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 118,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 122,
                            "endColumn": 127
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from query and the value of its length property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[query](1)",
              "[length](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "search.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 26,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dca658fa5a7f8326046f14f64cd76172effdd52665316e5bc13058285c17e830",
            "1": "d6aab2be.4773f344.2736cee9.d7919eeb.ef9f7d82.8020cfdf.a99379eb.ae94f388.29386b0b.4773f344.2736cee9.c559ebce.5540c8e4.daa64470.83265159.40e83381",
            "identity": "4a11a34f-9dda-4fee-b003-e2d5bd57e9d4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 59,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from query and the value of its substring property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[query](1)",
              "[substring](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "search.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 63,
                  "endColumn": 72
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dca658fa5a7f8326046f14f64cd76172effdd52665316e5bc13058285c17e830",
            "1": "fc2715a0.4773f344.2736cee9.c8688b2b.ef9f7d82.daa64470.a99379eb.ae94f388.29386b0b.4773f344.2736cee9.c8688b2b.5540c8e4.daa64470.83265159.40e83381",
            "identity": "42ffa2c0-426e-46d6-8891-c4fa154f74ee"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 54,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 59,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 63,
                            "endColumn": 72
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 407,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          },
          "suppressions": []
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "JavaScript",
            "files": 57,
            "type": "SUPPORTED"
          }
        ]
      }
    }
  ]
}
